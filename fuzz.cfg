#==========================================================================
#    MQTT-fuzzware: An open source testbed for evaluating MQTT fuzzers.
#    Copyright (C) 2020 Luis Gustavo Araujo Rodriguez, from Honduras C.A.
#
#    This file is part of MQTT-fuzzware.
#
#    MQTT-fuzzware is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    MQTT-fuzzware is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with MQTT-fuzzware.  If not, see <https://www.gnu.org/licenses/>.
#==========================================================================

### Stopping Criterion 
### Only 1 allowed during testing
### Currently supports two stopping criterion: 
### Fuzzing campaign (time in seconds) 
### Packets (exchanged between the fuzzer and the broker)
FUZZING_CAMPAIGN=( 180 360 540 720 900 1080 1260 1440 1620 1800 1440 1620 )
#PACKETS=( 500 1000 2000 4000 6000 8000 )

### Fuzzers 
### Only 1 allowed for each test run 
MQTT_FUZZER=( 'fsecure' )
#MQTT_FUZZER=( 'aichernig' )
#MQTT_FUZZER=( 'casteur' ) 
#MQTT_FUZZER=( 'mqttgram' )
#MQTT_FUZZER=( 'scapy' )
#MQTT_FUZZER=( 'dipaolo' )
#MQTT_FUZZER=( 'fume' )

### Number of test runs for each stopping criterion
TRIALS=110

### Name of brokers/target systems 
### if > 1, tests will be made sequentially, not simultaneously
BROKER_VERSION=( 'mosquitto' )
#BROKER_VERSION=( 'mosquitto' 'moquette' )

### Executable file of broker
BROKER_EXEC=( 'src/mosquitto' )
#BROKER_EXEC=( 'distribution/target/bin/moquette.sh' )
#BROKER_EXEC=( 'src/mosquitto' 'distribution/target/bin/moquette.sh' )

### Name of process 
### Name is required to kill the process once the stopping criterion has been satisfied
BROKER_PROCESS=( 'java' )
#BROKER_PROCESS=( 'mosquitto' )
#BROKER_PROCESS=( 'mosquitto' 'java' )

### Directory in virtual machine where the source code of the broker is stored.
BROKER_DIR="/home/vagrant/broker-results"

### Directory in host machine where results for each fuzzer are stored
### Results are stored in three types of logs: 
### Broker Log (Blog) stores broker-related information
### Fuzzer Log (Flog) stores fuzzer-related information
### Packet Log stores packets exchanged between the fuzzer and the broker in a .pcap file
OUTPUT_DIR="/home/luis/$MQTT_FUZZER-results"

### Interface used by the fuzzer and broker (in virtual machine) to communicate with one another
VM_INTERFACE=( 'vboxnet0' )

### Capture filter for storing packets only between the fuzzer and the broker
CAPTURE_FILTER="tcp port 1883"

### Name of virtual machine
TARGET="broker"

### Ip address of virtual machine
TARGET_IP="192.168.33.20"
#TARGET_IP="192.168.33.40"

### Directory in host machine that contains the source code for each fuzzer
#FUZZER_DIR="/home/luis/research/mqtt_fuzzers/f_secure_mqtt_fuzz"
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/Learning-Based-Fuzzing"
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/CyberExploit"
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/phd" #MQTTGRAM VERSION2 and MQTTGRAM5CF and MQTTGRAMH
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/phd-mqttgram-v1" #MQTTGRAM VERSION1
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/phd-mqttgram-v1-scapy" #MQTTGRAM VERSION1 and SCAPY
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/dipaolo2021" #DIPAOLO2021
FUZZER_DIR="/home/luis/research/mqtt_fuzzers/FUME-Fuzzing-MQTT-Brokers" #PEARSON 2022

### Directory that contains the necessary scripts to perform the experiments
SCRIPT_DIR="/home/luis/research/mqtt_fuzzers/phd/experiments"
